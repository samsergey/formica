#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.3.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 20 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 37 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 14 90 -1 90 -1 1 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1
          0 453 0 27 3 13 #"#lang formica"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 16 3 11 #"define-type"
0 0 23 3 1 #" "
0 0 14 3 3 #"Amb"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 16 3 2 #"::"
0 0 23 3 1 #" "
0 0 14 3 9 #"amb-apply"
0 0 23 3 3 #" (("
0 0 14 3 3 #"Any"
0 0 23 3 1 #" "
0 0 14 3 2 #"->"
0 0 23 3 1 #" "
0 0 14 3 4 #"Amb?"
0 0 23 3 2 #") "
0 0 14 3 4 #"Amb?"
0 0 23 3 1 #" "
0 0 14 3 2 #"->"
0 0 23 3 1 #" "
0 0 14 3 4 #"Amb?"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 16 3 8 #"define/."
0 0 23 3 1 #" "
0 0 14 3 9 #"amb-apply"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"    "
0 0 14 3 1 #"f"
0 0 23 3 2 #" ("
0 0 14 3 3 #"Amb"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 3 #"..."
0 0 23 3 2 #") "
0 0 14 3 3 #"-->"
0 0 23 3 2 #" ("
0 0 14 3 5 #"foldr"
0 0 23 3 2 #" ("
0 0 14 3 11 #"composition"
0 0 23 3 1 #" "
0 0 14 3 8 #"amb-plus"
0 0 23 3 1 #" "
0 0 14 3 1 #"f"
0 0 23 3 3 #") ("
0 0 14 3 3 #"Amb"
0 0 23 3 2 #") "
0 0 14 3 1 #"x"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 16 3 2 #"::"
0 0 23 3 1 #" "
0 0 14 3 8 #"amb-plus"
0 0 23 3 2 #" ("
0 0 14 3 4 #"Amb?"
0 0 23 3 1 #" "
0 0 14 3 4 #"Amb?"
0 0 23 3 1 #" "
0 0 14 3 2 #"->"
0 0 23 3 1 #" "
0 0 14 3 4 #"Amb?"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 16 3 8 #"define/."
0 0 23 3 1 #" "
0 0 14 3 8 #"amb-plus"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 3 #"Amb"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 3 #"..."
0 0 23 3 3 #") ("
0 0 14 3 3 #"Amb"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 14 3 3 #"..."
0 0 23 3 2 #") "
0 0 14 3 3 #"-->"
0 0 23 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 23 3 1 #" "
0 0 14 3 3 #"Amb"
0 0 23 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 6 #"append"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 16 3 2 #"::"
0 0 23 3 1 #" "
0 0 14 3 8 #"amb-bind"
0 0 23 3 2 #" ("
0 0 14 3 4 #"Amb?"
0 0 23 3 2 #" ("
0 0 14 3 3 #"Any"
0 0 23 3 1 #" "
0 0 14 3 2 #"->"
0 0 23 3 1 #" "
0 0 14 3 4 #"Amb?"
0 0 23 3 2 #") "
0 0 14 3 2 #"->"
0 0 23 3 1 #" "
0 0 14 3 4 #"Amb?"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 8 #"amb-bind"
0 0 23 3 2 #" ("
0 0 14 3 7 #"flipped"
0 0 23 3 1 #" "
0 0 14 3 9 #"amb-apply"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 16 3 12 #"define-monad"
0 0 23 3 1 #" "
0 0 14 3 9 #"Amb-monad"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"#:type "
0 0 14 3 4 #"Amb?"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"#:return "
0 0 14 3 3 #"Amb"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"#:bind "
0 0 14 3 8 #"amb-bind"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"#:mplus "
0 0 14 3 8 #"amb-plus"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"#:mzero ("
0 0 14 3 3 #"Amb"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 16 3 11 #"define-type"
0 0 23 3 2 #" ("
0 0 14 3 4 #"Just"
0 0 23 3 1 #" "
0 0 14 3 3 #"Any"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 16 3 11 #"define-type"
0 0 23 3 1 #" "
0 0 14 3 6 #"Maybe?"
0 0 23 3 1 #" "
0 0 14 3 5 #"Just?"
0 0 23 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"Nothing"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 16 3 12 #"define-monad"
0 0 23 3 1 #" "
0 0 14 3 5 #"Maybe"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"  #:type "
0 0 14 3 6 #"Maybe?"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"  #:return ("
0 0 16 3 2 #"\316\273"
0 0 23 3 2 #" ("
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 27 3 1 #"."
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 3 #") ("
0 0 14 3 4 #"Just"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"  #:bind ("
0 0 14 3 2 #"/."
0 0 23 3 2 #" ("
0 0 14 3 4 #"Just"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 2 #") "
0 0 14 3 1 #"f"
0 0 23 3 1 #" "
0 0 14 3 3 #"-->"
0 0 23 3 2 #" ("
0 0 14 3 1 #"f"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"             "
0 0 21 3 1 #"'"
0 0 14 3 7 #"Nothing"
0 0 23 3 1 #" "
0 0 14 3 1 #"f"
0 0 23 3 1 #" "
0 0 14 3 3 #"-->"
0 0 23 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"Nothing"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"  #:mplus ("
0 0 14 3 2 #"/."
0 0 23 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"Nothing"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 3 #"-->"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"Nothing"
0 0 23 3 1 #" "
0 0 14 3 3 #"-->"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"_"
0 0 23 3 1 #" "
0 0 14 3 3 #"-->"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"  #:mzero "
0 0 21 3 1 #"'"
0 0 14 3 7 #"Nothing"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 16 3 5 #"using"
0 0 23 3 1 #" "
0 0 14 3 9 #"Amb-monad"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 16 3 2 #"do"
0 0 23 3 2 #" ("
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 2 #"<-"
0 0 23 3 2 #" ("
0 0 14 3 3 #"Amb"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 1 #" "
0 0 21 3 1 #"3"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 5 #"guard"
0 0 23 3 2 #" ("
0 0 14 3 4 #"odd?"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 1 #"z"
0 0 23 3 1 #" "
0 0 14 3 2 #"<-"
0 0 23 3 2 #" ("
0 0 14 3 3 #"Amb"
0 0 23 3 2 #"  "
0 0 21 3 2 #"10"
0 0 23 3 1 #" "
0 0 21 3 2 #"20"
0 0 23 3 1 #" "
0 0 21 3 2 #"30"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 3 #"Amb"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"z"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 9 #"real-sqrt"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 16 3 2 #"do"
0 0 23 3 2 #" ("
0 0 14 3 5 #"guard"
0 0 23 3 2 #" ("
0 0 14 3 1 #">"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 21 3 1 #"0"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ["
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 14 3 2 #"<-"
0 0 23 3 2 #" ("
0 0 14 3 6 #"return"
0 0 23 3 2 #" ("
0 0 14 3 4 #"sqrt"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 6 #"return"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 16 3 5 #"using"
0 0 23 3 1 #" "
0 0 14 3 9 #"Amb-monad"
0 0 23 3 2 #" ("
0 0 14 3 9 #"real-sqrt"
0 0 23 3 1 #" "
0 0 21 3 1 #"4"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 16 3 5 #"using"
0 0 23 3 1 #" "
0 0 14 3 9 #"Amb-monad"
0 0 23 3 2 #" ("
0 0 14 3 9 #"real-sqrt"
0 0 23 3 1 #" "
0 0 21 3 2 #"-4"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 16 3 5 #"using"
0 0 23 3 1 #" "
0 0 14 3 5 #"Maybe"
0 0 23 3 2 #" ("
0 0 14 3 9 #"real-sqrt"
0 0 23 3 1 #" "
0 0 21 3 1 #"4"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 16 3 5 #"using"
0 0 23 3 1 #" "
0 0 14 3 5 #"Maybe"
0 0 23 3 2 #" ("
0 0 14 3 9 #"real-sqrt"
0 0 23 3 1 #" "
0 0 21 3 2 #"-4"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 16 3 7 #"collect"
0 0 23 3 2 #" ("
0 0 14 3 3 #"sqr"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 3 #") ["
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 2 #"<-"
0 0 23 3 2 #" ("
0 0 14 3 5 #"range"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 1 #" "
0 0 21 3 1 #"5"
0 0 23 3 4 #")] ("
0 0 14 3 5 #"even?"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 16 3 2 #"do"
0 0 23 3 2 #" ["
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 2 #"<-"
0 0 23 3 2 #" ("
0 0 14 3 5 #"range"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 1 #" "
0 0 21 3 1 #"5"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 5 #"guard"
0 0 23 3 2 #" ("
0 0 14 3 5 #"even?"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 6 #"return"
0 0 23 3 2 #" ("
0 0 14 3 3 #"sqr"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 3 #")))"
0           0
